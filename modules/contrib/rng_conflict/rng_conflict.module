<?php

use Drupal\Core\Database\Query\AlterableInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\rng\EventTypeInterface;
use Drupal\Core\Url;

/**
 * Implements hook_entity_type_build().
 */
function rng_conflict_entity_type_build(array &$entity_types) {
  /** @var $entity_types \Drupal\Core\Entity\EntityTypeInterface[] */
  $entity_types['event_type']->setFormClass('conflicts', 'Drupal\rng_conflict\Form\EventTypeConflictForm');
}

/**
 * Implements hook_entity_operation().
 */
function rng_conflict_entity_operation(EntityInterface $entity) {
  $operations = [];

  if ($entity instanceof EventTypeInterface) {
    $operations['conflicts'] = [
      'title' => t('Conflicts'),
      'url' => Url::fromRoute('entity.event_type.conflicts', [
        'event_type' => $entity->id(),
      ]),
      'weight' => 25,
    ];
  }

  return $operations;
}

/**
 * Implements hook_query_alter().
 */
function rng_conflict_query_alter(AlterableInterface $query) {
  if ($query->hasTag('rng_register')) {
    /** @var \Drupal\rng_conflict\RngConflictProviderInterface $conflict_provider */
    $conflict_provider = \Drupal::service('rng_conflict.conflict_provider');
    $conflict_provider->alterQuery($query);
  }
}
